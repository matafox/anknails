import { useEffect, useState } from "react";
import { useTranslation } from "react-i18next";
import { Menu, X } from "lucide-react";

export default function Header() {
  const { i18n } = useTranslation();
  const [fade, setFade] = useState(false);
  const [menuOpen, setMenuOpen] = useState(false);

  const changeLanguage = (lng) => {
    if (lng === i18n.language) return;
    setFade(true);
    setTimeout(() => {
      i18n.changeLanguage(lng);
      localStorage.setItem("lang", lng);
      setFade(false);
    }, 200);
  };

  // üîÑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –º—ñ–∂ –≤–∫–ª–∞–¥–∫–∞–º–∏
  useEffect(() => {
    const syncLang = (e) => {
      if (e.key === "lang" && e.newValue && e.newValue !== i18n.language) {
        i18n.changeLanguage(e.newValue);
      }
    };
    window.addEventListener("storage", syncLang);
    return () => window.removeEventListener("storage", syncLang);
  }, [i18n]);

  const isAbout =
    typeof window !== "undefined" &&
    window.location.hostname.startsWith("about.");

  // üîπ –ø–µ—Ä–µ—Ö–æ–¥–∏ –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏
  const goToCourse = () => {
    const lang = localStorage.getItem("lang") || i18n.language || "ru";
    window.location.href = `https://ankstudio.online?lang=${lang}`;
  };
  const goToAbout = () => {
    const lang = localStorage.getItem("lang") || i18n.language || "ru";
    window.location.href = `https://about.ankstudio.online?lang=${lang}`;
  };

  // üîπ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è / –∑–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é
  const toggleMenu = () => {
    const newState = !menuOpen;
    setMenuOpen(newState);
    window.dispatchEvent(new CustomEvent("menu-toggle", { detail: newState }));
  };

  // üîπ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ —Å–µ–∫—Ü—ñ—ó
  const scrollToSection = (id) => {
    const section = document.getElementById(id);
    if (section) section.scrollIntoView({ behavior: "smooth" });
    setMenuOpen(false);
    window.dispatchEvent(new CustomEvent("menu-toggle", { detail: false }));
  };

  // ‚ùå –º–µ–Ω—é –Ω–µ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –Ω–∞ about-—Å—É–±–¥–æ–º–µ–Ω—ñ
  if (isAbout) {
    return (
      <header className="absolute top-6 right-6 z-20 flex gap-2 flex-wrap justify-end">
        <button
          onClick={goToCourse}
          className="px-3 py-1 text-sm rounded-md border border-pink-200 dark:border-neutral-700 
            bg-gradient-to-r from-pink-500 to-rose-500 text-white font-medium
            shadow-md hover:scale-105 transition-all duration-300"
        >
          {i18n.language === "ru"
            ? "–ö—É—Ä—Å"
            : i18n.language === "pl"
            ? "Kurs"
            : i18n.language === "en"
            ? "Course"
            : "–ö—É—Ä—Å"}
        </button>

        {/* üá∑üá∫ üá∫üá¶ üá¨üáß üáµüá± */}
        {["ru", "uk", "en", "pl"].map((lng) => (
          <button
            key={lng}
            onClick={() => changeLanguage(lng)}
            className={`px-3 py-1 text-sm rounded-md backdrop-blur-sm border transition-all ${
              i18n.language === lng
                ? "bg-pink-500 text-white border-transparent shadow-lg"
                : "bg-white/50 dark:bg-white/10 text-gray-600 dark:text-gray-300 border-pink-100 dark:border-neutral-700 hover:bg-pink-100/80"
            }`}
          >
            {lng.toUpperCase()}
          </button>
        ))}
      </header>
    );
  }

  // üå∏ –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
  return (
    <header className="absolute top-6 left-6 right-6 z-50 flex justify-between items-center">
      {/* –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é –∑–ª—ñ–≤–∞ */}
      <button
        onClick={toggleMenu}
        className="p-2 rounded-md bg-white/40 dark:bg-white/10 border border-white/30 backdrop-blur-lg
                   hover:bg-white/60 dark:hover:bg-white/20 transition-all shadow-md"
        aria-label="–í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é"
      >
        <div className="transition-transform duration-300">
          {menuOpen ? (
            <X className="w-6 h-6 text-pink-600 dark:text-pink-400" />
          ) : (
            <Menu className="w-6 h-6 text-pink-600 dark:text-pink-400" />
          )}
        </div>
      </button>

      {/* –∫–Ω–æ–ø–∫–∏ –º–æ–≤ + "–û–±–æ –º–Ω–µ" */}
      <div
        className={`flex gap-2 items-center transition-opacity duration-300 ${
          fade ? "opacity-0" : "opacity-100"
        }`}
      >
        <button
          onClick={goToAbout}
          className="px-3 py-1 text-sm rounded-md border border-pink-200 dark:border-neutral-700 
                     bg-gradient-to-r from-pink-500 to-rose-500 text-white font-medium
                     shadow-md hover:scale-105 transition-all duration-300"
        >
          {i18n.language === "ru"
            ? "–û–±–æ –º–Ω–µ"
            : i18n.language === "pl"
            ? "O mnie"
            : i18n.language === "en"
            ? "About me"
            : "–ü—Ä–æ –º–µ–Ω–µ"}
        </button>

        {["ru", "uk"].map((lng) => (
          <button
            key={lng}
            onClick={() => changeLanguage(lng)}
            className={`px-3 py-1 text-sm rounded-md backdrop-blur-sm border transition-all ${
              i18n.language === lng
                ? "bg-pink-500 text-white border-transparent shadow-lg"
                : "bg-white/50 dark:bg-white/10 text-gray-600 dark:text-gray-300 border-pink-100 dark:border-neutral-700 hover:bg-pink-100/80"
            }`}
          >
            {lng.toUpperCase()}
          </button>
        ))}
      </div>

      {/* —Å–∫–ª—è–Ω–µ –º–µ–Ω—é */}
      {menuOpen && (
        <div
          className="fixed inset-0 bg-white/40 dark:bg-black/40 backdrop-blur-2xl z-40 flex flex-col items-center justify-center space-y-8 text-2xl font-semibold text-gray-800 dark:text-white"
        >
          <button onClick={() => scrollToSection("modules")}>
            {i18n.language === "ru" ? "–ú–æ–¥—É–ª–∏" : "–ú–æ–¥—É–ª—ñ"}
          </button>
          <button onClick={() => scrollToSection("works")}>
            {i18n.language === "ru" ? "–†–∞–±–æ—Ç—ã —É—á–µ–Ω–∏—Ü" : "–†–æ–±–æ—Ç–∏ —É—á–µ–Ω–∏—Ü—å"}
          </button>
          <button onClick={() => scrollToSection("forwhom")}>
            {i18n.language === "ru" ? "–î–ª—è –∫–æ–≥–æ –∫—É—Ä—Å" : "–î–ª—è –∫–æ–≥–æ –∫—É—Ä—Å"}
          </button>
          <button onClick={() => scrollToSection("coursestart")}>
            {i18n.language === "ru" ? "–°—Ç–∞—Ä—Ç –∫—É—Ä—Å–∞" : "–°—Ç–∞—Ä—Ç –∫—É—Ä—Å—É"}
          </button>
          <button onClick={() => scrollToSection("tariffs")}>
            {i18n.language === "ru" ? "–¢–∞—Ä–∏—Ñ—ã" : "–¢–∞—Ä–∏—Ñ–∏"}
          </button>
          <button onClick={() => scrollToSection("faq")}>
            {i18n.language === "ru" ? "FAQ" : "–ü–∏—Ç–∞–Ω–Ω—è"}
          </button>
        </div>
      )}
    </header>
  );
}
