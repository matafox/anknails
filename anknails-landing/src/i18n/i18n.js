import i18n from "i18next";
import { initReactI18next } from "react-i18next";
import en from "./en.json";
import pl from "./pl.json";
import ru from "./ru.json";
import uk from "./uk.json";

// ---- üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –º–æ–≤–∏ —á–µ—Ä–µ–∑ cookie (—Å–ø—ñ–ª—å–Ω–∞ –¥–ª—è –≤—Å—ñ—Ö —Å—É–±–¥–æ–º–µ–Ω—ñ–≤)
function getCookie(name) {
  const match = document.cookie.match(new RegExp("(^| )" + name + "=([^;]+)"));
  return match ? decodeURIComponent(match[2]) : null;
}

function setCookie(name, value) {
  const expires = new Date();
  expires.setFullYear(expires.getFullYear() + 1);
  document.cookie = `${name}=${encodeURIComponent(
    value
  )};expires=${expires.toUTCString()};path=/;domain=.ankstudio.online;SameSite=Lax`;
}

// ---- –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–≤–∏
const savedLang = getCookie("lang") || localStorage.getItem("lang");
const browserLang = navigator.language.split("-")[0];
const defaultLang =
  savedLang ||
  (["ru", "uk", "pl", "en"].includes(browserLang) ? browserLang : "ru");

// ---- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è i18next
i18n.use(initReactI18next).init({
  resources: {
    en: { translation: en },
    pl: { translation: pl },
    ru: { translation: ru },
    uk: { translation: uk },
  },
  lng: defaultLang,
  fallbackLng: "ru",
  interpolation: { escapeValue: false },
});

// ---- –ü—Ä–∏ –∑–º—ñ–Ω—ñ –º–æ–≤–∏ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ cookie + localStorage
i18n.on("languageChanged", (lng) => {
  try {
    localStorage.setItem("lang", lng);
    setCookie("lang", lng);
  } catch (e) {
    console.warn("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –º–æ–≤—É:", e);
  }
});

export default i18n;
